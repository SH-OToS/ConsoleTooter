#!/bin/sh
# ----------------------------ここからコンフィグ--------------------------------
mes="test" # toot空打ちの時投稿する文字列を定義
DefCW="CW" # デフォルトのCWテキストを指定
vis="public" # 公開範囲を指定
url="" # URLを指定
token="" # トークンを指定

# ----------------------------ここまでコンフィグ--------------------------------
f_help=1
f_cw=1
f_pipe=1
param=""
# Get Option!!
for OPT in "$@"
do
  case "$OPT" in
    '--help' )
      f_help=0
      ;;
    '--cw' )
      f_cw=0
      if [ ! -z "$2" ]; then
        shift
      fi
      ;;
    '--pipe' )
      f_pipe=0
      if [ ! -z "$2" ]; then
        shift
      fi
      ;;
    '--direct' )
      vis="direct"
      if [ ! -z "$2" ]; then
        shift
      fi
      ;;
    '--private' )
      vis="private"
      if [ ! -z "$2" ]; then
        shift
      fi
      ;;
    '--unlisted' )
      vis="unlisted"
      if [ ! -z "$2" ]; then
        shift
      fi
      ;;
    '--public' )
      vis="public"
      if [ ! -z "$2" ]; then
        shift
      fi
      ;;
    *)
      if [ ! -z "$1" ]; then
        tmp=`echo $param`
        param=`echo "$tmp $1"`
      fi
      ;;
  esac
done

if [ $f_help = "0" ]; then # helpを呼び出すかの判定
  echo "ConsoleTooter v0.0.1"
  echo "コンソールで作業中にちょっとTootしたくなったときに使えます"
  echo "Github: https://github.com/SH-OToS/ConsoleTooter"
  echo "デフォルトの公開範囲: $vis"
  echo "\ntoot [内容]      [内容を投稿]"
  echo "toot             $mesを投稿"
  exit 0
fi

if [ -z $param ]; then # 空打ちかの判定
  if [ $f_pipe = "0" ]; then # パイプのフラグが立っているかの判定
    if [ ! -t 0 ]; then # パイプの判定
      if [ $f_cw = "0" ]; then # CWの判定
        echo "Please Input CW Text"
        read CW < /dev/tty # < /dev/ttyを入れないとreadが機能しない
        if [ -z "$CW" ]; then # CWテキストがあるかの判定
          CW=`echo "$DefCW"`
        fi
        curl -F "status=$(cat -)" -F "visibility=$vis" -F "spoiler_text=$CW" -sS "$url" --header "Authorization: Bearer $token" -o /dev/null -w '%{http_code}' # CWありのパイプからの投稿処理
      else
        curl -F "status=$(cat -)" -F "visibility=$vis" -sS "$url" --header "Authorization: Bearer $token" -o /dev/null -w '%{http_code}' # CWなしのパイプからの投稿処理
      fi
    else
      echo "Error: No content in pipe"
      exit 1
    fi
  else
    if [ $f_cw = "0" ]; then # CWの判定
      echo "Please Input CW Text"
      read CW
      if [ -z "$CW" ]; then # CWテキストがあるかの判定
        CW=`echo "$DefCW"`
      fi
      curl -F "status=$mes" -F "visibility=$vis" -F "spoiler_text=$CW" -sS "$url" --header "Authorization: Bearer $token" -o /dev/null -w '%{http_code}' # CWありの空打ち投稿処理
    else
      curl -F "status=$mes" -F "visibility=$vis" -sS "$url" --header "Authorization: Bearer $token" -o /dev/null -w '%{http_code}' # CWなしの空打ち投稿処理
    fi
  fi
else
  if [ $f_cw = "0" ]; then # CWの判定
    echo "Please Input CW Text"
    read CW
    if [ -z "$CW" ]; then # CWテキストがあるかの判定
      CW=`echo "$DefCW"`
    fi
    curl -F "status=$param" -F "visibility=$vis" -F "spoiler_text=$CW" -sS "$url" --header "Authorization: Bearer $token" -o /dev/null -w '%{http_code}' # CWありの引数投稿処理
  else
    curl -F "status=$param" -F "visibility=$vis" -sS "$url" --header "Authorization: Bearer $token" -o /dev/null -w '%{http_code}' # CWなしの引数投稿処理
  fi
fi


exit 0
